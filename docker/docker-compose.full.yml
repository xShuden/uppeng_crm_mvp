# Full Docker Compose with all Supabase services - Fixed Configuration

services:
  # =============================================================================
  # CORE DATABASE
  # =============================================================================

  # PostgreSQL Database
  supabase-db:
    image: supabase/postgres:15.1.0.117
    ports:
      - "54322:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_PORT: 5432
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256 --auth-local=scram-sha-256
    volumes:
      - supabase-db-data:/var/lib/postgresql/data
      - ../database/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - crm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # SUPABASE SERVICES
  # =============================================================================

  # Supabase Auth (GoTrue)
  supabase-auth:
    image: supabase/gotrue:v2.132.3
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:54321
      
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:postgres@supabase-db:5432/postgres?search_path=auth
      
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: ""
      GOTRUE_DISABLE_SIGNUP: false
      
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: your-super-secret-jwt-key-with-at-least-32-characters

      GOTRUE_EXTERNAL_EMAIL_ENABLED: true
      GOTRUE_MAILER_AUTOCONFIRM: false
      GOTRUE_SMTP_ADMIN_EMAIL: admin@localhost.test
      GOTRUE_SMTP_HOST: supabase-mail
      GOTRUE_SMTP_PORT: 2500
      GOTRUE_SMTP_USER: fake_mail_user
      GOTRUE_SMTP_PASS: fake_mail_password
      GOTRUE_SMTP_SENDER_NAME: fake_sender
      
      GOTRUE_MAILER_URLPATHS_INVITE: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_RECOVERY: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "/auth/v1/verify"

      GOTRUE_EXTERNAL_PHONE_ENABLED: true
      GOTRUE_SMS_AUTOCONFIRM: true
    networks:
      - crm-network
    restart: unless-stopped

  # PostgREST API
  supabase-rest:
    image: postgrest/postgrest:v12.0.1
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgresql://authenticator:postgres@supabase-db:5432/postgres
      PGRST_DB_SCHEMAS: public,storage,auth,realtime
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: your-super-secret-jwt-key-with-at-least-32-characters
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: your-super-secret-jwt-key-with-at-least-32-characters
      PGRST_APP_SETTINGS_JWT_EXP: 3600
    networks:
      - crm-network
    restart: unless-stopped

  # Supabase Realtime
  supabase-realtime:
    image: supabase/realtime:v2.25.35
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PORT: 4000
      DB_HOST: supabase-db
      DB_PORT: 5432
      DB_USER: supabase_admin
      DB_PASSWORD: postgres
      DB_NAME: postgres
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: your-super-secret-jwt-key-with-at-least-32-characters
      SECRET_KEY_BASE: your-super-secret-jwt-key-with-at-least-32-characters-and-64-chars-long
      ERL_AFLAGS: -proto_dist inet_tcp
      DNS_NODES: "''"
      RLIMIT_NOFILE: "10000"
      APP_NAME: realtime
      SEED_SELF_HOST: true
      RUN_JANITOR: true
    networks:
      - crm-network
    restart: unless-stopped

  # Supabase Storage
  supabase-storage:
    image: supabase/storage-api:v0.43.11
    ports:
      - "54328:5000"
    depends_on:
      supabase-db:
        condition: service_healthy
      supabase-rest:
        condition: service_started
    environment:
      ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJy13Bq4TnCuN2FQk8zpYlGCGPMCelCIM
      SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      POSTGREST_URL: http://supabase-rest:3000
      PGRST_JWT_SECRET: your-super-secret-jwt-key-with-at-least-32-characters
      DATABASE_URL: postgresql://supabase_storage_admin:postgres@supabase-db:5432/postgres
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: http://supabase-imgproxy:5001
      PORT: 5000
      POSTGREST_URL_INTERNAL: http://supabase-rest:3000
    volumes:
      - supabase-storage-data:/var/lib/storage:z
    networks:
      - crm-network
    restart: unless-stopped

  # Supabase Image Transformation
  supabase-imgproxy:
    image: darthsim/imgproxy:v3.8.0
    environment:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: "true"
      IMGPROXY_ENABLE_WEBP_DETECTION: "true"
    volumes:
      - supabase-storage-data:/var/lib/storage:z
    networks:
      - crm-network
    restart: unless-stopped

  # Supabase Database Admin UI
  supabase-meta:
    image: supabase/postgres-meta:v0.68.0
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: supabase-db
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: postgres
      PG_META_DB_USER: supabase_admin
      PG_META_DB_PASSWORD: postgres
    networks:
      - crm-network
    restart: unless-stopped

  # Supabase Edge Functions
  supabase-edge-functions:
    image: supabase/edge-runtime:v1.22.4
    ports:
      - "54327:9000"
    depends_on:
      supabase-db:
        condition: service_healthy
    command: ["edge-runtime", "start", "--main-service", "/home/deno/functions", "--event-worker", "/home/deno/functions"]
    environment:
      JWT_SECRET: your-super-secret-jwt-key-with-at-least-32-characters
      SUPABASE_URL: http://supabase-kong:8000
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJy13Bq4TnCuN2FQk8zpYlGCGPMCelCIM
      SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      SUPABASE_DB_URL: postgresql://supabase_admin:postgres@supabase-db:5432/postgres
      PORT: 9000
    volumes:
      - ../volumes/functions:/home/deno/functions:ro
    networks:
      - crm-network
    restart: unless-stopped

  # Supabase API Gateway (Kong)
  supabase-kong:
    image: kong:2.8.1
    ports:
      - "54321:8000"  # Supabase API
      - "54323:8443"  # Supabase Studio
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro
    depends_on:
      - supabase-db
      - supabase-auth
      - supabase-rest
      - supabase-realtime
      - supabase-storage
      - supabase-meta
      - supabase-edge-functions
    networks:
      - crm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 5

  # Supabase Studio (Admin Dashboard)
  supabase-studio:
    image: supabase/studio:latest
    ports:
      - "54324:3000"
    environment:
      STUDIO_PG_META_URL: http://supabase-meta:8080
      POSTGRES_PASSWORD: postgres
      DEFAULT_ORGANIZATION_NAME: "CRM v2"
      DEFAULT_PROJECT_NAME: "CRM v2 Local"
      SUPABASE_URL: http://localhost:54321
      SUPABASE_REST_URL: http://supabase-kong:8000/rest/v1/
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJy13Bq4TnCuN2FQk8zpYlGCGPMCelCIM
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
    depends_on:
      supabase-kong:
        condition: service_healthy
    networks:
      - crm-network
    restart: unless-stopped

  # =============================================================================
  # APPLICATION SERVICES
  # =============================================================================

  # Backend (Development)
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@supabase-db:5432/postgres
      SUPABASE_URL: http://supabase-kong:8000
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOuoJy13Bq4TnCuN2FQk8zpYlGCGPMCelCIM
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
    volumes:
      - ../backend:/app
      - /app/node_modules
    depends_on:
      supabase-kong:
        condition: service_healthy
    networks:
      - crm-network
    restart: unless-stopped

  # Frontend (Development)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      REACT_APP_SUPABASE_URL: http://localhost:54321
      REACT_APP_SUPABASE_ANON_KEY: ${ANON_KEY}
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ../frontend:/app
      - /app/node_modules
    networks:
      - crm-network
    restart: unless-stopped

  # =============================================================================
  # SUPPORTING SERVICES
  # =============================================================================

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - crm-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mail service for development
  supabase-mail:
    image: inbucket/inbucket:3.0.3
    ports:
      - "54325:9000"  # Web interface
    environment:
      INBUCKET_WEB_ADDR: 0.0.0.0:9000
      INBUCKET_POP3_ADDR: 0.0.0.0:1100
      INBUCKET_SMTP_ADDR: 0.0.0.0:2500
    networks:
      - crm-network
    restart: unless-stopped

volumes:
  supabase-db-data:
  supabase-storage-data:
  redis-data:

networks:
  crm-network:
    driver: bridge