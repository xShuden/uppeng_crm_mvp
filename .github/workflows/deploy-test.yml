name: Deploy to Test

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: xshuden/uppeng-crm-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment:
      name: test
      url: http://test-8xpm.uppeng.co

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Deploy to Test Environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 31.42.127.152
          username: root
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          command_timeout: 5m
          script: |
            set -e
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker stop uppeng-crm-frontend || true
            docker rm uppeng-crm-frontend || true
            docker pull ghcr.io/xshuden/uppeng-crm-frontend:latest
            docker run -d --name uppeng-crm-frontend --restart unless-stopped -p 3000:3000 ghcr.io/xshuden/uppeng-crm-frontend:latest
            echo "Done!"

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 31.42.127.152
          username: root
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            echo "⏳ Waiting for service to be ready..."
            sleep 30
            
            SERVICE_NAME="uppeng-crm-frontend"
            
            echo "=== RUNNING CONTAINERS ==="  
            docker ps --filter "name=$SERVICE_NAME"
            
            echo ""
            echo "=== CONTAINER LOGS (last 20 lines) ==="
            docker logs --tail 20 $SERVICE_NAME 2>/dev/null || echo "Logs not available yet"

      - name: Health Check
        run: |
          echo "🔍 Running health checks..."
          
          # Try to connect to the service
          MAX_ATTEMPTS=6
          ATTEMPT=1
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            echo "Health check attempt $ATTEMPT/$MAX_ATTEMPTS..."
            
            if curl -f -s http://test-8xpm.uppeng.co/health > /dev/null 2>&1; then
              echo "✅ Health check passed!"
              break
            else
              echo "⏳ Service not ready yet, waiting..."
              sleep 30
              ATTEMPT=$((ATTEMPT + 1))
            fi
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "⚠️  Health check failed after $MAX_ATTEMPTS attempts"
            echo "Service may still be starting up..."
          fi

      - name: Deployment Summary
        if: always()
        env:
          IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
        run: |
          echo "========================================"
          echo "🚀 CRM v2 Frontend Deployment Summary"
          echo "========================================"
          echo "📦 Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          echo "🎯 Environment: Test"
          echo "🐳 Deployment: Docker Swarm Stack"
          echo "🌐 URL: http://test-8xpm.uppeng.co"
          echo "📋 Stack: uppeng-crm-stack"
          echo "🔧 Service: uppeng-crm-frontend"
          echo "========================================"