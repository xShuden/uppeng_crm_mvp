name: Deploy CRM Frontend to Test Environment

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: xshuden/uppeng-crm-frontend
  DOCKER_HOST: ${{ secrets.DOCKER_HOST }}
  SERVICE_NAME: uppeng-crm-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy via Portainer API
        env:
          IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
        run: |
          echo "🚀 Deploying via Portainer API..."
          
          # Create SSH key file
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          
          # Deploy via SSH to Portainer
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no root@31.42.127.152 << 'EOF'
            echo "🗑️ Removing existing service via Docker..."
            docker service rm uppeng-crm-frontend 2>/dev/null || echo "No existing service to remove"
            sleep 10
            
            echo "🐳 Login to GitHub Container Registry..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            echo "📦 Pull latest image..."
            docker pull ghcr.io/xshuden/uppeng-crm-frontend:master-${{ github.sha }}
            
            echo "🚀 Create new Docker service..."
            docker service create \
              --name uppeng-crm-frontend \
              --publish 3000:3000 \
              --restart-condition any \
              --restart-max-attempts 3 \
              --with-registry-auth \
              ghcr.io/xshuden/uppeng-crm-frontend:master-${{ github.sha }}
            
            echo "✅ Service deployed successfully"
          EOF
          
          # Clean up SSH key
          rm -f /tmp/deploy_key

      - name: Verify Deployment
        run: |
          echo "⏳ Waiting for service to be ready..."
          sleep 30
          
          if [ ! -z "$DOCKER_HOST" ]; then
            # Check stack services
            echo "=== STACK SERVICES ==="
            docker stack services uppeng-crm-stack
            
            echo ""
            echo "=== RUNNING CONTAINERS ==="  
            docker ps --filter "name=uppeng-crm-stack"
            
            echo ""
            echo "=== SERVICE LOGS (last 20 lines) ==="
            docker service logs --tail 20 uppeng-crm-stack_uppeng-crm-frontend 2>/dev/null || echo "Logs not available yet"
          fi

      - name: Health Check
        run: |
          echo "🔍 Running health checks..."
          
          # Try to connect to the service
          MAX_ATTEMPTS=6
          ATTEMPT=1
          
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            echo "Health check attempt $ATTEMPT/$MAX_ATTEMPTS..."
            
            if curl -f -s http://test-8xpm.uppeng.co/health > /dev/null 2>&1; then
              echo "✅ Health check passed!"
              break
            else
              echo "⏳ Service not ready yet, waiting..."
              sleep 30
              ATTEMPT=$((ATTEMPT + 1))
            fi
          done
          
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "⚠️  Health check failed after $MAX_ATTEMPTS attempts"
            echo "Service may still be starting up..."
          fi

      - name: Deployment Summary
        if: always()
        env:
          IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
        run: |
          echo "========================================"
          echo "🚀 CRM v2 Frontend Deployment Summary"
          echo "========================================"
          echo "📦 Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          echo "🎯 Environment: Test"
          echo "🐳 Deployment: Docker Swarm Stack"
          echo "🌐 URL: http://test-8xpm.uppeng.co"
          echo "📋 Stack: uppeng-crm-stack"
          echo "🔧 Service: uppeng-crm-frontend"
          echo "========================================"